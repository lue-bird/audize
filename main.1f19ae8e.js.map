{"version":3,"sources":["virtual-audio.js","main.js","../../../../../.npm-global/lib/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["defer","f","setTimeout","AudioContext","window","webkitAudioContext","VirtualAudioGraph","context","opts","$context","$nodes","vPrev","autostart","resume","vGraph","vCurr","prepare","diff","removed","forEach","patch","type","_destroyNode","key","_removeProperty","data","_disconnect","created","_createNode","_setProperty","_connect","updated","suspend","properties","$node","createAnalyser","createBufferSource","destination","createBiquadFilter","createChannelMerger","createChannelSplitter","createConstantSource","createConvolver","maxDelayTime","find","label","createDelay","value","createDynamicsCompressor","createGain","feedforward","feedback","createIIRFilter","mediaElement","createMediaElementSource","document","querySelector","createMediaStreamDestination","createOscillator","createPanner","createStereoPanner","createWaveShaper","console","warn","prop","start","stop","disconnect","linearRampToValueAtTime","currentTime","method","target","time","default","a","b","param","connect","graph","base","node","i","connections","length","flatten","nodes","depth","oldNodes","newNodes","patches","newNode","oldNode","push","connection","split","j","Math","max","oldProp","newProp","oldConnection","newConnection","Object","values","audio","addEventListener","state","App","Elm","Main","init","ports","updateAudio","subscribe","update","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","concat","Function","deps","cached","cache","some","cb"],"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","file":"main.1f19ae8e.js","sourceRoot":"src","sourcesContent":["const defer = f => setTimeout(f, 0)\nconst AudioContext = window.AudioContext || window.webkitAudioContext\n\nexport default class VirtualAudioGraph {\n    // Static Methods ============================================================\n    //\n    static prepare(graph = []) {\n        // The first step in preparing the graph is to key each virtual node.\n        // This is how we perform a diff between graphs and calculate what has\n        // changed each update.\n        const key = (graph, base = '') => {\n            graph.forEach((node, i) => {\n                // RefNodes always have a key, and they also\n                // cannot have connections or properties\n                // so we can just return early and move on.\n                if (node.type === 'RefNode') return\n                // Assign the node a key if it didn't already have one.\n                // This is how we track changes to the graph in a slightly\n                // more organised way\n                if (!node.key) node.key = `${base}_${i}`\n\n                // Recursively assign keys to this nodes connections.\n                if (node.connections && node.connections.length > 0) {\n                    key(node.connections, node.key)\n                }\n            })\n\n            return graph\n        }\n\n        // It is often most natural to represent the audio graph as a list\n        // of trees, using RefNodes to \"jump\" between chains of node\n        // connections. This isns't the easiest data structure to deal with\n        // however, so the next step in preparation is the flatten the graph\n        // into a single array.\n        const flatten = (graph, nodes = {}, depth = 0) => {\n            graph.forEach((node, i) => {\n                // Don't push RefNodes to the flat graph.\n                if (node.type !== 'RefNode') nodes[node.key] = node\n                if (node.connections) flatten(node.connections, nodes, depth + 1)\n                // If we're deeper than the root of the graph, replace\n                // this node with a reference to itself by key.\n                if (depth > 0) graph[i] = { type: 'RefNode', key: node.key }\n            })\n\n            return nodes\n        }\n\n        return flatten(key(graph))\n    }\n\n    //\n    static diff(oldNodes, newNodes) {\n        const patches = { created: [], updated: [], removed: [] }\n\n        for (const newNode of Object.values(newNodes)) {\n            const oldNode = oldNodes[newNode.key]\n\n            // A node with newNode.key does not exist in the old graph, so this must\n            // mean we've created a brand new node.\n            if (!oldNode) {\n                patches.created.push({ type: 'node', key: newNode.key, data: newNode })\n\n                newNode.connections.forEach(connection => {\n                    patches.created.push({ type: 'connection', key: newNode.key, data: connection.key.split('.') })\n                })\n\n                // A node with the same key exists in both graphs, but the type has changed\n                // (eg osc -> gain) so we need to recreate the node.\n            } else if (oldNode.type !== newNode.type) {\n                patches.updated.push({ type: 'node', key: newNode.key, data: newNode })\n\n                newNode.connections.forEach(connection => {\n                    patches.created.push({ type: 'connection', key: newNode.key, data: connection.key.split('.') })\n                })\n\n                // A node with the same key exists in both graphs and the node hasn't\n                // fundamentally changed, so now we check whether properties or connections\n                // have changed.\n            } else {\n                // Checking properties...\n                for (let j = 0; j < Math.max(oldNode.properties.length, newNode.properties.length); j++) {\n                    const oldProp = oldNode.properties[j]\n                    const newProp = newNode.properties[j]\n\n                    //\n                    if (!oldProp) {\n                        patches.created.push({ type: 'property', key: oldNode.key, data: newProp })\n                    } else if (!newProp) {\n                        patches.removed.push({ type: 'property', key: oldNode.key, data: oldProp })\n                    } else if (oldProp.label !== newProp.label) {\n                        patches.removed.push({ type: 'property', key: oldNode.key, data: oldProp })\n                        patches.created.push({ type: 'property', key: oldNode.key, data: newProp })\n                    } else if (oldProp.value !== newProp.value) {\n                        patches.updated.push({ type: 'property', key: oldNode.key, data: newProp })\n                    }\n                }\n\n                // Checking connections...\n                for (let j = 0; j < Math.max(oldNode.connections.length, newNode.connections.length); j++) {\n                    const oldConnection = oldNode.connections[j]\n                    const newConnection = newNode.connections[j]\n\n                    //\n                    if (!oldConnection) {\n                        patches.created.push({ type: 'connection', key: oldNode.key, data: newConnection.key.split('.') })\n                    } else if (!newConnection) {\n                        patches.removed.push({ type: 'connection', key: oldNode.key, data: oldConnection.key.split('.') })\n                    } else if (oldConnection.key !== newConnection.key) {\n                        patches.removed.push({ type: 'connection', key: oldNode.key, data: oldConnection.key.split('.') })\n                        patches.created.push({ type: 'connection', key: oldNode.key, data: newConnection.key.split('.') })\n                    }\n                }\n            }\n\n            delete oldNodes[newNode.key]\n        }\n\n        for (const oldNode of Object.values(oldNodes)) {\n            patches.removed.push({ type: 'node', key: oldNode.key, data: oldNode })\n        }\n\n        return patches\n    }\n\n    // Constructor ===============================================================\n    //\n    constructor(context = new AudioContext(), opts = {}) {\n        // Borrowing a convetion from virtual dom libraries, the $ sign //is used to\n        // indicate \"real\" Web Audio bits, and the v- prefix is used to indicate\n        // virtual elements.\n\n        // $context is a reference to the `AudioContext` either passed in or created\n        // on construction.\n        this.$context = context\n        // A reference to the real graph of audio nodes\n        this.$nodes = {}\n        // We keep track of the prebious graph so we can perform a diff and work out\n        // what has changed between updates.\n        this.vPrev = {}\n\n        // In most modern browsers an Audio Context starts in a suspended state and\n        // requires some user interaction before it can be resumed. Still, we can\n        // attempt to resume the context ourselves in the developer passes in the\n        // `autostart` option.\n        if (opts.autostart) this.resume()\n    }\n\n    // Public Methods ============================================================\n    //\n    update(vGraph = []) {\n        // The accompanying library of virtual node functions\n        // encourages a nested tree-like approach to describing\n        // audio graphs. This isn't the easiest structure to deal\n        // with, however, so a preparation step serves to wrestle\n        // the graph into a more suitable shape.\n        const vCurr = VirtualAudioGraph.prepare(vGraph)\n\n        // A diff tracks everything that has been removed, created,\n        // and updated between updates. We perform this step so we\n        // only touch the audio nodes that need to be changed in some\n        // way.\n        const diff = VirtualAudioGraph.diff(this.vPrev, vCurr)\n\n        // Remove nodes and properties from the graph.\n        diff.removed.forEach(patch => {\n            switch (patch.type) {\n                case 'node':\n                    this._destroyNode(patch.key)\n                    break\n                case 'property':\n                    this._removeProperty(patch.key, patch.data)\n                    break\n                case 'connection':\n                    this._disconnect(patch.key, patch.data)\n                    break\n            }\n        })\n\n        // Create new nodes and add new properties to\n        // the graph.\n        diff.created.forEach(patch => {\n            switch (patch.type) {\n                case 'node':\n                    this._createNode(patch.key, patch.data)\n                    break\n                case 'property':\n                    this._setProperty(patch.key, patch.data)\n                    break\n                case 'connection':\n                    defer(() => this._connect(patch.key, patch.data))\n                    break\n            }\n        })\n\n        // Update existing nodes and properties in the\n        // graph.\n        diff.updated.forEach(patch => {\n            switch (patch.type) {\n                case 'node':\n                    this._destroyNode(patch.key)\n                    this._createNode(patch.key, patch.data)\n                    break\n                case 'property':\n                    this._setProperty(patch.key, patch.data)\n                    break\n                case 'connection':\n                    // Connections can't be updated\n                    break\n            }\n        })\n\n        // Store the current graph for next time.\n        this.vPrev = vCurr\n    }\n\n    // A thin wrapper of the `AudioContext.suspend()` method. This\n    // bassically exists so developers don't have to reach in and\n    // touch the \"real\" audio context directly.\n    suspend() {\n        this.$context.suspend()\n    }\n\n    // A thin wrapper of the `AudioContext.resume()` method. This\n    // bassically exists so developers don't have to reach in and\n    // touch the \"real\" audio context directly.\n    resume() {\n        this.$context.resume()\n    }\n\n    // Private Methods ===========================================================\n    //\n    _createNode(key, { type, properties }) {\n        let $node = null\n\n        //\n        switch (type) {\n            case 'AnalyserNode':\n                $node = this.$context.createAnalyser()\n                break\n            case 'AudioBufferSourceNode':\n                $node = this.$context.createBufferSource()\n                break\n            case 'AudioDestinationNode':\n                $node = this.$context.destination\n                break\n            case 'BiquadFilterNode':\n                $node = this.$context.createBiquadFilter()\n                break\n            case 'ChannelMergerNode':\n                $node = this.$context.createChannelMerger()\n                break\n            case 'ChannelSplitterNode':\n                $node = this.$context.createChannelSplitter()\n                break\n            case 'ConstantSourceNode':\n                $node = this.$context.createConstantSource()\n                break\n            case 'ConvolverNode':\n                $node = this.$context.createConvolver()\n                break\n            case 'DelayNode':\n                const maxDelayTime = properties.find(({ label }) => label === 'maxDelayTime')\n                $node = this.$context.createDelay((maxDelayTime && maxDelayTime.value) || 1)\n                break\n            case 'DynamicsCompressorNode':\n                $node = this.$context.createDynamicsCompressor()\n                break\n            case 'GainNode':\n                $node = this.$context.createGain()\n                break\n            case 'IIRFilterNode':\n                const feedforward = properties.find(({ label }) => label === 'feedforward')\n                const feedback = properties.find(({ label }) => label === 'feedback')\n                $node = this.$context.createIIRFilter(\n                    (feedforward && feedforward.value) || [0],\n                    (feedback && feedback.value) || [1]\n                )\n                break\n            case 'MediaElementAudioSourceNode':\n                const mediaElement = properties.find(({ label }) => label === 'mediaElement')\n                $node = this.$context.createMediaElementSource(\n                    document.querySelector(mediaElement.value)\n                )\n                break\n            case 'MediaStreamAudioDestinationNode':\n                $node = this.$context.createMediaStreamDestination()\n                break\n            // TODO: How should I handle creating / grabbing the media stream?\n            // case 'MediaStreamAudioSourceNode':\n            //   $node = this.$context.createMediaStreamSource(\n\n            //   )\n            //   break\n            case 'OscillatorNode':\n                $node = this.$context.createOscillator()\n                break\n            case 'PannerNode':\n                $node = this.$context.createPanner()\n                break\n            case 'StereoPannerNode':\n                $node = this.$context.createStereoPanner()\n                break\n            case 'WaveShaperNode':\n                $node = this.$context.createWaveShaper()\n                break\n            //\n            default:\n                console.warn(`Invalide node type of: ${type}. Defaulting to GainNode to avoid crashing the AudioContext.`)\n                $node = this.$context.createGain()\n        }\n\n        this.$nodes[key] = $node\n\n        //\n        properties.forEach(prop => this._setProperty(key, prop))\n\n        // Certain nodes like oscillators must be started before they will produce\n        // noise. We make the assumption that these nodes should always start\n        // immediately after they have been created, so if a `start` method exists we\n        // call it.\n        if ($node.start) $node.start()\n    }\n\n    //\n    _destroyNode(key) {\n        const $node = this.$nodes[key]\n\n        // Certain nodes like oscillators can be stopped. It probably doesn't make\n        // much of a difference calling this method, but we do just in case!\n        if ($node.stop) $node.stop()\n\n        // Calling disconnect with no arguments will disconnect this node from\n        // everything.\n        $node.disconnect()\n\n        // Finally remove the node from the graph and let the GC do its job.\n        delete this.$nodes[key]\n    }\n\n    //\n    _setProperty(key, { type, label, value }) {\n        const $node = this.$nodes[key]\n\n        switch (type) {\n            case 'NodeProperty':\n                $node[label] = value\n                break\n            case 'AudioParam':\n                $node[label].linearRampToValueAtTime(value, this.$context.currentTime + 0.01)\n                break\n            case 'ScheduledUpdate':\n                $node[label][value.method](value.target, value.time)\n                break\n        }\n    }\n\n    //\n    _removeProperty(key, { type, label, value }) {\n        const $node = this.$nodes[key]\n\n        switch (type) {\n            case 'NodeProperty':\n                break\n            case 'AudioParam':\n                $node[label].value = $node[label].default\n                break\n            case 'ScheduledUpdate':\n                // TODO: work out how to cancel scheduled updates\n                break\n        }\n    }\n\n    //\n    _connect(a, [b, param = null]) {\n        if (b) this.$nodes[a].connect(param ? this.$nodes[b][param] : this.$nodes[b])\n    }\n\n    //\n    _disconnect(a, [b, param = null]) {\n        if (b) this.$nodes[a].disconnect(param ? this.$nodes[b][param] : this.$nodes[b])\n    }\n}","/* global AudioContext */\nimport { Elm } from './Main.elm'\nimport VirtualAudioGraph from './virtual-audio'\n\nconst context = new AudioContext()\nconst audio = new VirtualAudioGraph(context)\n\n// Chrome autplay policy demans some user interaction\n// takes place before the AudioContext can be resumed.\nwindow.addEventListener('click', () => {\n\tif (context.state === 'suspended') context.resume()\n})\n\nconst App = Elm.Main.init({\n\tnode: document.querySelector('#app')\n})\n\nApp.ports.updateAudio.subscribe(graph => {\n\taudio.update(graph)\n})","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}